#include<iostream>
#include<math.h>
#include<stdlib.h>
#include<stdio.h>
using namespace std;

int main(){
    int n;
    cout << "Input n: ";
    cin >> n;
    double matra[n][n], vectb[n], vectx[n], vecty[n], matrl[n][n], matru[n][n];
    cout << "Inprut matrix A: " << endl;
    for(int i =0; i < n; i++)
        for(int j = 0; j < n; j++)
            cin >> matra[i][j];
    if(matra[0][0] == 0 ){
        double max = matra[0][0];
        for(int i = 0; i < n; i++){
            if(fabs(matra[i][0]) > max){
                max = matra[i][0];
                double a[n +1];
                for(int j = 0; j < n; j++){
                    a[j] = matra[0][j];
                    a[n] = vectb[0];
                    matra[0][j] = matra[i][j];
                    vectb[0] = vectb[i];
                    matra[i][j] = a[j];
                    vectb[j] = a[n];
                }
            }
        }
    }
    if(matra[0][0] == 0){
        cout << "Singular matrix";
        return 1;
    }
    cout << "Input vektor B: " << endl;
    for(int i = 0; i < n; i++)
        cin >> vectb[i];
    for(int i = 0; i < n; i++)
        for(int j = 0; j < n; j++){
            matrl[i][j] = 0;
            matru[i][j] = 0;
        }
    for(int i = 0; i < n; i++)
        for(int j = 0; j < n; j++)
            matru[i][j] = matra[i][j];

      for (int i = 0; i < n; i++)
                for (int j = 0; j < n; j++){
                    matru[0][i] = matra[0][i];
                    matrl[i][0] = matra[i][0] / matru[0][0];
                    double sum = 0;
                    for (int k = 0; k < i; k++){
                        sum += matrl[i][k] * matru[k][j];
                    }
                    matru[i][j] = matra[i][j] - sum;
                    if (i > j){
                        matrl[j][i] = 0;
                    }else{
                        sum = 0;
                        for (int k = 0; k < i; k++){
                            sum += matrl[j][k] * matru[k][i];
                        }
                        matrl[j][i] = (matra[j][i] - sum) / matru[i][i];
                    }
                }
    cout << "__________________" <<endl;
    cout << "Matrix L:" << endl;
    for(int i = 0; i < n; i++){
        for(int j = 0; j < n; j++)
            cout << matrl[i][j] << "   ";
        cout << endl;
    }
    cout << "Matrix U:" << endl;
    for(int i = 0; i < n; i++){
        for(int j = 0; j < n; j++)
            cout << matru[i][j] << "   ";
        cout << endl;
    }
    cout << "__________________" <<endl;
    cout << "Check L*U:" << endl;
    double R[n][n];
    for(int i = 0; i < n; i++)
		for(int j = 0; j < n; j++)
            R[i][j] = 0;
    for(int i = 0; i < n; i++)
		for(int j = 0; j < n; j++)
			for(int k = 0; k < n; k++)
				R[i][j] += matrl[i][k] * matru[k][j];
    for(int i = 0; i < n; i++){
        for(int j = 0; j < n; j++)
            cout << R[i][j] << "  ";
        cout <<endl;
    }
    for(int i = 0; i < n; i++){
        double tmp = vectb[i];
        for(int j = 0; j < i; j++){
            tmp -= vecty[j]*matrl[i][j];
        }
        vecty[i] = tmp;
    }
    cout << "__________________" <<endl;
    for(int i = 0; i < n; i++){
        cout << "y[" << i << "] = " << vecty[i] << endl;
    }
    for(int i = n-1; i >=0; i--){
        double tmp = vecty[i];
        for(int j = n-1; j > i; j--){
            tmp -= vectx[j]*matru[i][j];
        }
        vectx[i] = tmp/matru[i][i];
    }
    cout << "__________________" <<endl;
    for(int i = 0; i < n; i++){
        cout << "x[" << i << "] = " << vectx[i] << endl;
    }
    return 0;
}
